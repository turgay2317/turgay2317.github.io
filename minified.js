var mouseX,mouseY,offsetX,offsetY,canvasContainer=document.getElementById("canvas-container"),context=canvasContainer.getContext("2d"),addButton=document.getElementById("add-state"),deleteButton=document.getElementById("delete-state"),beginButton=document.getElementById("set-begin"),finishButton=document.getElementById("set-finish"),testButton=document.getElementById("test-expression"),simulateButton=document.getElementById("simulate-dfa"),addTransition=document.getElementById("add-transition"),deleteTransition=document.getElementById("delete-transition"),stateIndex=0,states=[],transitions=[],dragging=!1,draggingCircle=!1,selectedState=null,initialState=null,finishStates=[],selectedTransition=null;canvasContainer.addEventListener("mousedown",handleMouseDown),canvasContainer.addEventListener("mousemove",handleMouseMove),canvasContainer.addEventListener("mouseup",handleMouseUp),canvasContainer.addEventListener("click",handleMouseClick);const hasClickedState=t=>mouseX>=t.x-t.radius&&mouseX<=t.x+t.radius&&mouseY>=t.y-t.radius&&mouseY<=t.y+t.radius,hasClickedTransition=t=>(mouseX>=t.from.x&&mouseX<=t.to.x||mouseX<=t.from.x&&mouseX>=t.to.x)&&(mouseY>=t.from.y&&mouseY<=t.to.y||mouseY<=t.from.y&&mouseY>=t.to.y);function handleMouseClick(t){mouseX=t.clientX-canvasContainer.getBoundingClientRect().left,mouseY=t.clientY-canvasContainer.getBoundingClientRect().top;var e=!1,n=!1;states.forEach((function(t){hasClickedState(t)?(t.color="skyblue",selectedState=t,e=!0):(t.color="#3498db",t.transitions.forEach((function(t){hasClickedTransition(t)?(t.color="#3498db",selectedTransition=t,n=!0):t.color="#fff"})))})),e||(selectedState=null),n||(selectedTransition=null),drawCanvas()}function addCircle(t,e){states.push(new State(`q${stateIndex}`,t,e,30,"#3498db")),stateIndex++,drawCanvas()}function deleteselectedState(){if(null==selectedState)return alert("Please choose a state to delete.");states.forEach((t=>{t.transitions=t.transitions.filter((t=>t.from!=selectedState&&t.to!=selectedState))})),states=states.filter((t=>t!=selectedState)),selectedState=null,drawCanvas()}function deleteSelectedTransition(){if(null==selectedTransition)return alert("Please choose a transition to delete.");states.forEach((t=>{t.transitions=t.transitions.filter((t=>t!=selectedTransition))})),selectedTransition=null,drawCanvas()}function doTest(){if(!initialState)return alert("Choose initial state to begin.");if(0==finishStates.length)return alert("DFA must contain finish states.");for(var t=prompt("Which expression would you want to test? abba | 01100"),e=!0,n=0;n<t.length;n++){var a=t.charAt(n);transitions.forEach((t=>{t.status!=a&&(e=!1)}))}if(!e)return alert("Invalid alphabet");let o=[initialState],i=0;for(;i<o.length;){o[i].transitions.forEach((e=>{e.status===t.charAt(i)&&(o.push(e.to),console.log(o))})),i++}finishStates.includes(o[o.length-1])?alert("Recognized"):alert("Not Recognized!")}function drawCanvas(){drawStates(),drawTransitions()}const simulate=()=>{if(!initialState)return alert("Choose initial state to simulate.");if(0==finishStates.length)return alert("DFA must contain finish states.");for(var t=prompt("Which expression would you want to simulate? abba | 01100"),e=!0,n=0;n<t.length;n++){var a=t.charAt(n);transitions.forEach((t=>{t.status!=a&&(e=!1)}))}if(!e)return alert("Invalid alphabet");time=500;let o=[initialState],i=0;function s(){if(i<o.length){const e=o[i];states.forEach((t=>{t.color="#3498db"})),e.transitions.forEach((e=>{e.status===t.charAt(i)&&(e.to.color="#0c324b",o.push(e.to)),drawCanvas()})),i++,setTimeout(s,time)}}initialState.color="#0c324b",drawCanvas(),setTimeout((()=>{s()}),time)};function drawStates(){context.clearRect(0,0,canvasContainer.width,canvasContainer.height),states.forEach((function(t){context.beginPath(),context.font="18px Arial",context.arc(t.x,t.y,t.radius,0,2*Math.PI),context.fillStyle=t.color,context.fill(),finishStates.includes(t)&&(context.arc(t.x,t.y,t.radius+5,0,2*Math.PI),context.fillStyle=t.color,context.fill()),context.strokeStyle="#fff",context.strokeText(t.name,t.x-10,t.y+5),context.stroke(),initialState==t&&drawArrow(t.x-t.radius-0,t.y,10)}))}function drawTransitions(){states.forEach((function(t){t.transitions.forEach((function(t){var e=t.from.x,n=t.to.x,a=t.from.y,o=t.to.y,i=t.from.radius,s=n>e?e+i:e-i,l=n>e?n-i:n+i,r=(s+l)/2,c=(a+o)/2;if(t.from==t.to){const n=e-i,o=e+i,s=a,l=n-50,r=o+50,d=a-70;c=c-i-5,context.beginPath(),context.moveTo(n,s),context.bezierCurveTo(l,d,r,d,o,s),context.strokeStyle=t.color,context.stroke()}else context.beginPath(),context.moveTo(s,a),context.lineTo(l,o),context.strokeStyle=t.color,context.stroke();drawTriangleWithAngle(l,o,10,Math.atan2(o-a,l-s)),context.fillStyle="white",context.font="15px Arial",context.fillText(t.status,r,c)}))}))}function drawArrow(t,e,n){context.beginPath(),context.moveTo(t,e),context.lineTo(t-n,e-n),context.lineTo(t-n,e+n),context.fillStyle="white",context.fill(),context.stroke(),context.closePath()}function drawTriangleWithAngle(t,e,n,a){context.beginPath();var o=t-n*Math.cos(a),i=e-n*Math.sin(a),s=t-n*Math.cos(a+Math.PI/3),l=e-n*Math.sin(a+Math.PI/3);context.moveTo(t,e),context.lineTo(o,i),context.lineTo(s,l),context.fillStyle="white",context.fill(),context.stroke(),context.closePath()}function handleMouseDown(t){var e=t.clientX-canvasContainer.getBoundingClientRect().left,n=t.clientY-canvasContainer.getBoundingClientRect().top;states.forEach((function(t){Math.sqrt((e-t.x)**2+(n-t.y)**2)<=t.radius&&(dragging=!0,draggingCircle=t,offsetX=e-t.x,offsetY=n-t.y)}))}function handleMouseMove(t){dragging&&(mouseX=t.clientX-canvasContainer.getBoundingClientRect().left,mouseY=t.clientY-canvasContainer.getBoundingClientRect().top,draggingCircle.x=mouseX-offsetX,draggingCircle.y=mouseY-offsetY,drawCanvas())}function handleMouseUp(){dragging=!1,draggingCircle=null}function setBeginCircle(){if(!selectedState)return alert("Lütfen önce bir durum seçin");initialState=initialState==selectedState?null:selectedState,drawCanvas()}function setFinishCircle(){if(!selectedState)return alert("Please choose a state");finishStates.includes(selectedState)?finishStates=finishStates.filter((t=>t!=selectedState)):finishStates.push(selectedState),drawCanvas()}function addTransitionHandle(){if(!selectedState)return alert("Please choose a state");var t=prompt("Enter the name of target state. (q1)"),e=selectedState,n=states.find((e=>e.name==t));if(!n)return alert("Target state doesn't exist");var a=prompt("0 | 1 | a | b");if(selectedState.transitions.filter((t=>t.status==a)).length>0)return alert("Transation of "+a+" already exists!");e.add(new Transition(e,n,a,"#fff")),drawCanvas()}addButton.onclick=function(){addCircle(40,40)},deleteButton.onclick=deleteselectedState,beginButton.onclick=setBeginCircle,finishButton.onclick=setFinishCircle,addTransition.onclick=addTransitionHandle,deleteTransition.onclick=deleteSelectedTransition,testButton.onclick=doTest,simulateButton.onclick=simulate;
